var p={create:i,reset:a,memo:u},e={requestID:"",contexts:new Map,tracking:[]};function i(t,s){let n=typeof t=="string"?t:s||Symbol(t==null?void 0:t.toString());return{use(){let o=e.contexts.get(n);if(!o){if(!t||typeof t=="string")throw new Error(`"${String(n)}" context was not provided.`);e.tracking.push(n);let d=t();e.tracking.pop(),o={value:d,dependants:new Set},e.contexts.set(n,o)}let r=e.tracking[e.tracking.length-1];return r&&o.dependants.add(r),o.value},provide(o){let r=global[Symbol.for("aws.lambda.runtime.requestId")];e.requestID!==r&&(e.requestID=r,a()),c(n),e.contexts.set(n,{value:o,dependants:new Set})}}}function a(){e.contexts.clear()}function c(t){let s=e.contexts.get(t);if(s)for(let n of s.dependants)c(n),e.contexts.delete(n)}function u(t,s){return i(t,s).use}export{p as a};
