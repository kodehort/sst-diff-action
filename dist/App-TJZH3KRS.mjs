import{a as O,h as w,k as N,l as g,m as u,n as I,o as B,p as C,q as f,r as $,s as j,t as M,u as S}from"./chunk-PT6L7NJD.mjs";import"./chunk-7H2TFXPN.mjs";import{K as D,a as X,j as _,q as Z,t as Q,u as tt,z as et}from"./chunk-IQOVF5LO.mjs";import"./chunk-5PARVRO5.mjs";import"./chunk-3PEVV4HI.mjs";import"./chunk-R6PYGTER.mjs";import"./chunk-SUBS3TDM.mjs";import"./chunk-KU6QELUJ.mjs";import"./chunk-ISPMX3VH.mjs";import"./chunk-THC7OU5T.mjs";import{e as h,g as F}from"./chunk-7S7IXY6P.mjs";import x from"path";import P from"fs";function U(a,t,e){st=a,it=t;let s=(e==null?void 0:e.id)||t.name;if(T(a).has(t))throw new Error(`StackDuplicates: Attempting to initialize stack ${s} several times`);class n extends u{constructor(k,p,H){super(k,p,H)}}let o=new n(a,s,e);ot(a).set(t,o);let d={app:a,stack:o},c=t.bind(o)(d);return c&&"then"in c?c.then(m=>{T(a).set(t,m)}):(T(a).set(t,c),a)}var st,it,R=new Map,E=new Map;function T(a){return R.has(a)||R.set(a,new Map),R.get(a)}function ot(a){return E.has(a)||E.set(a,new Map),E.get(a)}import{createRequire as nt}from"module";var K=h(tt(),1),l=h(_(),1),z=h(X(),1);var q=h(D(),1);var A="publicKey",G="privateKey",L="prefix",y=class extends z.Construct{id;authenticator;apis=new Set;constructor(t,e,s){var d,c;if(super(t,((d=s.cdk)==null?void 0:d.id)||e),!s.authenticator||"defaults"in s||"login"in s||"triggers"in s||"identityPoolFederation"in s||"cdk"in s)throw new Error("It looks like you may be passing in Cognito props to the Auth construct. The Auth construct was renamed to Cognito in version 1.10.0");y.list.add(this),this.id=e;let i=u.of(t);this.authenticator=s.authenticator;let n=new l.Policy(this,"CloudFrontInvalidatorPolicy",{statements:[new l.PolicyStatement({actions:["ssm:GetParameter","ssm:PutParameter","ssm:DeleteParameter"],resources:[`arn:${i.partition}:ssm:${i.region}:${i.account}:parameter/*`]})]});(c=i.customResourceHandler.role)==null||c.attachInlinePolicy(n),new q.CustomResource(this,"StackMetadata",{serviceToken:i.customResourceHandler.functionArn,resourceType:"Custom::AuthKeys",properties:{publicPath:f(this,A),privatePath:f(this,G)}}).node.addDependency(n)}getConstructMetadata(){return{type:"Auth",data:{}}}getFunctionBinding(){let t=this.node.root;return{clientPackage:"auth",variables:{publicKey:{type:"secret"}},permissions:{"ssm:GetParameters":[`arn:${u.of(this).partition}:ssm:${t.region}:${t.account}:parameter${f(this,A)}`]}}}attach(t,e){let s=this.node.root;if(this.apis.has(e.api))throw new Error("This Auth construct has already been attached to this Api construct.");if(Array.from(y.list).some(n=>n.apis.has(e.api)))throw new Error("This Api construct already has an Auth construct attached.");let i=e.prefix||"/auth";for(let n of[`ANY ${i}/{proxy+}`,`GET ${i}`]){e.api.addRoutes(t,{[n]:{type:"function",function:this.authenticator,authorizer:"none"}});let o=e.api.getFunction(n);o.addEnvironment(C(this,L),i),o.addEnvironment(C(this,A),$()),o.addEnvironment(C(this,G),$()),o.attachPermissions([new l.PolicyStatement({actions:["ssm:GetParameters"],effect:l.Effect.ALLOW,resources:[`arn:${u.of(this).partition}:ssm:${s.region}:${s.account}:parameter${f(this,"*")}`]})])}this.apis.size===0&&new K.StringParameter(this,"prefix",{parameterName:f(this,L),stringValue:i}),this.apis.add(e.api)}injectConfig(){for(let t of this.apis)for(let e of t.routes){let s=t.getFunction(e);s&&s.bind([this])}}static injectConfig(){for(let t of y.list)t.injectConfig()}},v=y;F(v,"list",new Set);var r=h(D(),1),Y=h(et(),1),J=h(Z(),1),b=h(_(),1),V=h(Q(),1),rt=nt(import.meta.url);function at(a){console.error(a),process.exit(1)}var W=class extends r.App{local=!1;mode;name;stage;region;account;debugStartedAt;debugIncreaseTimeout;appPath;isActiveStack;defaultFunctionProps;_defaultRemovalPolicy;get defaultRemovalPolicy(){return this._defaultRemovalPolicy}constructor(t,e={}){super(e),j.provide(this),this.appPath=process.cwd(),this.mode=t.mode,this.local=this.mode==="dev",this.stage=t.stage||"dev",this.name=t.name||"my-app",this.region=t.region||process.env.CDK_DEFAULT_REGION||"us-east-1",this.account=t.account||process.env.CDK_DEFAULT_ACCOUNT||"my-account",this.isActiveStack=t.isActiveStack,this.defaultFunctionProps=[],this.mode==="dev"&&(this.debugStartedAt=t.debugStartedAt,this.debugIncreaseTimeout=t.debugIncreaseTimeout)}logicalPrefixedName(t){let e=this.name===""?"":`${this.name}-`;return`${this.stage}-${e}${t}`}setDefaultRemovalPolicy(t){this._defaultRemovalPolicy=t}setDefaultFunctionProps(t){this.defaultFunctionProps.push(t)}addDefaultFunctionPermissions(t){this.defaultFunctionProps.push({permissions:t})}addDefaultFunctionEnv(t){this.defaultFunctionProps.push({environment:t})}addDefaultFunctionBinding(t){this.defaultFunctionProps.push({bind:t})}addDefaultFunctionLayers(t){this.defaultFunctionProps.push({layers:t})}isFinished=!1;async finish(){var e;if(this.isFinished)return;this.isFinished=!0,await M().run(),v.injectConfig(),this.buildConstructsMetadata(),this.ensureUniqueConstructIds(),this.codegenTypes(),this.createBindingSsmParameters(),this.removeGovCloudUnsupportedResourceProperties();let{config:t}=w();for(let s of this.node.children)if(N(s)&&(r.Tags.of(s).add("sst:app",this.name),r.Tags.of(s).add("sst:stage",this.stage),this._defaultRemovalPolicy&&this.applyRemovalPolicy(s,this._defaultRemovalPolicy),((e=t.advanced)==null?void 0:e.disableParameterizedStackNameCheck)!==!0&&!s.stackName.startsWith(`${this.stage}-`)&&!s.stackName.endsWith(`-${this.stage}`)&&s.stackName.indexOf(`-${this.stage}-`)===-1))throw new Error(`Stack "${s.stackName}" is not parameterized with the stage name. The stack name needs to either start with "$stage-", end in "-$stage", or contain the stage name "-$stage-".`)}isRunningSSTTest(){return process.env.SST_RESOURCES_TESTS==="enabled"}getInputFilesFromEsbuildMetafile(t){let e;try{e=JSON.parse(P.readFileSync(t).toString())}catch{at("There was a problem reading the esbuild metafile.")}return Object.keys(e.inputs).map(s=>x.resolve(s))}createBindingSsmParameters(){class t{visit(s){g(s)&&(s instanceof S&&s._doNotAllowOthersToBind||I(s))}}r.Aspects.of(this).add(new t)}buildConstructsMetadata(){let t=this.buildConstructsMetadata_collectConstructs(this),e={},s=[];for(let i of t){let n=u.of(i),o=e[n.node.id]||[],d=i.getConstructMetadata(),c={id:i.node.id,addr:i.node.addr,stack:u.of(i).stackName,...d};s.push(c),o.push({...c,local:void 0}),e[n.node.id]=o}for(let i of this.node.children)if(i instanceof u){let n=i.node.id;i.addOutputs({SSTMetadata:JSON.stringify({app:this.name,stage:this.stage,version:w().version,metadata:e[n]||[]})})}}buildConstructsMetadata_collectConstructs(t){return[g(t)?t:void 0,...t.node.children.flatMap(e=>this.buildConstructsMetadata_collectConstructs(e))].filter(e=>!!e)}applyRemovalPolicy(t,e){if(t instanceof r.CfnResource&&t.applyRemovalPolicy(r.RemovalPolicy[e.toUpperCase()]),t instanceof J.Bucket&&!t.node.tryFindChild("AutoDeleteObjectsCustomResource")){let s="Custom::S3AutoDeleteObjects",i=r.CustomResourceProvider.getOrCreateProvider(t,s,{codeDirectory:x.join(rt.resolve("aws-cdk-lib/aws-s3"),"../lib/auto-delete-objects-handler"),runtime:r.CustomResourceProviderRuntime.NODEJS_16_X,description:`Lambda function for auto-deleting objects in ${t.bucketName} S3 bucket.`});t.addToResourcePolicy(new b.PolicyStatement({actions:["s3:GetBucket*","s3:List*","s3:DeleteObject*"],resources:[t.bucketArn,t.arnForObjects("*")],principals:[new b.ArnPrincipal(i.roleArn)]}));let n=new r.CustomResource(t,"AutoDeleteObjectsCustomResource",{resourceType:s,serviceToken:i.serviceToken,properties:{BucketName:t.bucketName}});t.policy&&n.node.addDependency(t.policy)}t.node.children.forEach(s=>this.applyRemovalPolicy(s,e))}removeGovCloudUnsupportedResourceProperties(){if(!this.region.startsWith("us-gov-"))return;class t{visit(s){s instanceof Y.CfnFunction?s.addPropertyDeletionOverride("EphemeralStorage"):s instanceof V.CfnLogGroup&&s.addPropertyDeletionOverride("Tags")}}r.Aspects.of(this).add(new t)}ensureUniqueConstructIds(){let t={};class e{visit(i){var m,k;if(!g(i)||i instanceof S&&i._doNotAllowOthersToBind)return;let n=i.constructor.name,o=i.id,d=o.replace(/-/g,"_"),c=t[n]||{};if(o.match(/^[a-zA-Z]([a-zA-Z0-9-_])*$/)){if(["Parameter","Secret"].includes(n)){let p=((m=t.Secret)==null?void 0:m[d])||((k=t.Parameter)==null?void 0:k[d]);if(p===o)throw new Error(`ERROR: Config with id "${o}" already exists.`);if(p)throw new Error(`ERROR: You cannot have the same Config id with an underscore and hyphen: "${p}" and "${o}".`)}else if(c[d])throw new Error([c[d]===o?`${n} with id "${o}" already exists.`:`You cannot have the same ${n} id with an underscore and hyphen: "${c[d]}" and "${o}".`,"",'Starting v1.16, constructs must have unique ids for a given construct type. If you are migrating from version 1.15 or earlier, set the "cdk.id" in the construct with the existing id, and pick a unique id for the construct. Please see the upgrade guide \u2014 https://docs.serverless-stack.com/upgrade-guide#upgrade-to-v116',"","    For example, if you have two Bucket constructs with the same id:",'      new Bucket(this, "bucket");','      new Bucket(this, "bucket");',"","    Change it to:",'      new Bucket(this, "usersBucket", {',"        cdk: {",'          id: "bucket"',"        }","      });",'      new Bucket(this, "adminBucket", {',"        cdk: {",'          id: "bucket"',"        }","      });"].join(`
`))}else throw new Error([`Invalid id "${o}" for ${n} construct.`,"",'Starting v1.16, construct ids can only contain alphabetic characters, hyphens ("-"), and underscores ("_"), and must start with an alphabetic character. If you are migrating from version 1.15 or earlier, please see the upgrade guide \u2014 https://docs.serverless-stack.com/upgrade-guide#upgrade-to-v116'].join(`
`));c[d]=o,t[n]=c}}r.Aspects.of(this).add(new e)}codegenTypes(){let t=w(),e=x.resolve(t.paths.out,"types");O.debug(`Generating types in ${e}`),P.rmSync(e,{recursive:!0,force:!0}),P.mkdirSync(e,{recursive:!0}),P.appendFileSync(`${e}/index.ts`,['import "sst/node/config";','declare module "sst/node/config" {',"  export interface ConfigTypes {","    APP: string;","    STAGE: string;","  }","}"].join(`
`));class s{visit(n){if(!g(n)||n instanceof S&&n._doNotAllowOthersToBind)return;let o=B(n);if(!o)return;let d=n.constructor.name,c=n.id;P.appendFileSync(`${e}/index.ts`,(o.variables[0]==="."?[`import "sst/node/${o.clientPackage}";`,`declare module "sst/node/${o.clientPackage}" {`,`  export interface ${d}Resources {`,`    "${c}": string;`,"  }","}"]:[`import "sst/node/${o.clientPackage}";`,`declare module "sst/node/${o.clientPackage}" {`,`  export interface ${d}Resources {`,`    "${c}": {`,...o.variables.map(m=>`      ${m}: string;`),"    }","  }","}"]).join(`
`))}}r.Aspects.of(this).add(new s)}stack(t,e){return U(this,t,e)}};export{W as App};
